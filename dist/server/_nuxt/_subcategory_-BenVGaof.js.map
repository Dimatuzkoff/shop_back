{"version":3,"file":"_subcategory_-BenVGaof.js","sources":["../../../../pages/category/[category]/[subcategory].vue"],"sourcesContent":["<template>\n  <div>\n    <organism-Loader v-if=\"appStore.isLoading\" :isBlock=\"true\" />\n    <organism-ProductList v-else />\n  </div>\n</template>\n \n<script lang=\"ts\" setup>\nimport { useRoute, useRouter } from 'vue-router';\nimport { productMenu } from '@/data/default/productMenu';\nimport { replaceSpace } from '../utils';\nimport { useProductStore } from '@/stores/ProductStore';\nimport { useAppStore } from '@/stores/AppStore';\n\nconst route = useRoute();\nconst router = useRouter();\nconst productStore = useProductStore();\nconst appStore = useAppStore();\n\ninterface ProductMenu {\n  id: number;\n  name: {\n    en: string;\n    ru: string;\n  };\n  items: ProductMenuItem[];\n}\n\ninterface ProductMenuItem {\n  id: number;\n  name: {\n    en: string;\n    ru: string;\n  };\n}\n\ninterface SubCategoryToIdArgs {\n  category: string;\n  subcategory: string;\n  productMenu: ProductMenu[];\n}\n\ninterface SubCategoryToIdResult {\n  category: number | null;\n  subcategory: number | null;\n}\n\nfunction findCategoryId(\n  productMenu: ProductMenu[],\n  category: string\n): number | null {\n  return (\n    productMenu.find((elem) => replaceSpace(elem.name.en) === category)?.id ||\n    null\n  );\n}\n\nfunction subCategoryToId({\n  category,\n  subcategory,\n  productMenu,\n}: SubCategoryToIdArgs): SubCategoryToIdResult {\n  const categoryId = findCategoryId(productMenu, category);\n\n  const subcategoryId =\n    productMenu\n      .filter((elem) => elem.id === categoryId)\n      .flatMap((elem) => elem.items)\n      .find((item) => replaceSpace(item.name.en) === subcategory)?.id || null;\n\n  return { category: categoryId, subcategory: subcategoryId };\n}\n\nasync function fetchProducts() {\n  try {\n    // Приведение типов\n    const category = route.params.category;\n    const subcategory = route.params.subcategory;\n\n    // Проверка на наличие значений\n    if (typeof category !== 'string' || typeof subcategory !== 'string') {\n      throw new Error('Invalid route parameters');\n    }\n\n    const objId = subCategoryToId({\n      category,\n      subcategory,\n      productMenu: productMenu,\n    });\n\n    await productStore.getProducts(objId); // Убедитесь, что getProducts возвращает Promise\n  } catch (e) {\n    console.error(e); // Можно вывести ошибку в консоль для отладки\n    router.push('/');\n  }\n}\n\nfetchProducts();\n</script>\n"],"names":["productMenu"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,eAAe;AACrB,UAAM,WAAW;AA8BR,aAAA,eACPA,cACA,UACe;;AAEbA,eAAAA,kBAAY,KAAK,CAAC,SAAS,aAAa,KAAK,KAAK,EAAE,MAAM,QAAQ,MAAlEA,mBAAqE,OACrE;AAAA,IAEJ;AAEA,aAAS,gBAAgB;AAAA,MACvB;AAAA,MACA;AAAA,MACA,aAAAA;AAAAA,IAAA,GAC6C;;AACvC,YAAA,aAAa,eAAeA,cAAa,QAAQ;AAEjD,YAAA,kBACJA,kBACG,OAAO,CAAC,SAAS,KAAK,OAAO,UAAU,EACvC,QAAQ,CAAC,SAAS,KAAK,KAAK,EAC5B,KAAK,CAAC,SAAS,aAAa,KAAK,KAAK,EAAE,MAAM,WAAW,MAH5DA,mBAG+D,OAAM;AAEvE,aAAO,EAAE,UAAU,YAAY,aAAa,cAAc;AAAA,IAC5D;AAEA,mBAAe,gBAAgB;AACzB,UAAA;AAEI,cAAA,WAAW,MAAM,OAAO;AACxB,cAAA,cAAc,MAAM,OAAO;AAGjC,YAAI,OAAO,aAAa,YAAY,OAAO,gBAAgB,UAAU;AAC7D,gBAAA,IAAI,MAAM,0BAA0B;AAAA,QAC5C;AAEA,cAAM,QAAQ,gBAAgB;AAAA,UAC5B;AAAA,UACA;AAAA,UACA;AAAA,QAAA,CACD;AAEK,cAAA,aAAa,YAAY,KAAK;AAAA,eAC7B,GAAG;AACV,gBAAQ,MAAM,CAAC;AACf,eAAO,KAAK,GAAG;AAAA,MACjB;AAAA,IACF;AAEc;;;;;;;;;;;;;;;;;;;;"}