{"version":3,"file":"auth-COQXCwkk.js","sources":["../../../../node_modules/vuetify/lib/components/VTabs/shared.mjs","../../../../node_modules/vuetify/lib/components/VTabs/VTab.mjs","../../../../node_modules/vuetify/lib/components/VTabs/VTabsWindow.mjs","../../../../node_modules/vuetify/lib/components/VTabs/VTabsWindowItem.mjs","../../../../node_modules/vuetify/lib/components/VTabs/VTabs.mjs","../../../../pages/auth.vue"],"sourcesContent":["// Types\n\nexport const VTabsSymbol = Symbol.for('vuetify:v-tabs');\n//# sourceMappingURL=shared.mjs.map","import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VTab.css\";\n\n// Components\nimport { makeVBtnProps, VBtn } from \"../VBtn/VBtn.mjs\"; // Composables\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\"; // Utilities\nimport { computed, ref } from 'vue';\nimport { VTabsSymbol } from \"./shared.mjs\";\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n  sliderColor: String,\n  hideSlider: Boolean,\n  direction: {\n    type: String,\n    default: 'horizontal'\n  },\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text'\n  }), ['active', 'block', 'flat', 'location', 'position', 'symbol'])\n}, 'VTab');\nexport const VTab = genericComponent()({\n  name: 'VTab',\n  props: makeVTabProps(),\n  setup(props, _ref) {\n    let {\n      slots,\n      attrs\n    } = _ref;\n    const {\n      textColorClasses: sliderColorClasses,\n      textColorStyles: sliderColorStyles\n    } = useTextColor(props, 'sliderColor');\n    const rootEl = ref();\n    const sliderEl = ref();\n    const isHorizontal = computed(() => props.direction === 'horizontal');\n    const isSelected = computed(() => rootEl.value?.group?.isSelected.value ?? false);\n    function updateSlider(_ref2) {\n      let {\n        value\n      } = _ref2;\n      if (value) {\n        const prevEl = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider');\n        const nextEl = sliderEl.value;\n        if (!prevEl || !nextEl) return;\n        const color = getComputedStyle(prevEl).color;\n        const prevBox = prevEl.getBoundingClientRect();\n        const nextBox = nextEl.getBoundingClientRect();\n        const xy = isHorizontal.value ? 'x' : 'y';\n        const XY = isHorizontal.value ? 'X' : 'Y';\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom';\n        const widthHeight = isHorizontal.value ? 'width' : 'height';\n        const prevPos = prevBox[xy];\n        const nextPos = nextBox[xy];\n        const delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];\n        const origin = Math.sign(delta) > 0 ? isHorizontal.value ? 'right' : 'bottom' : Math.sign(delta) < 0 ? isHorizontal.value ? 'left' : 'top' : 'center';\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0;\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0;\n        const sigma = 1.5;\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [`translate${XY}(${delta}px) scale${XY}(${initialScale})`, `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`, 'none'],\n          transformOrigin: Array(3).fill(origin)\n        }, {\n          duration: 225,\n          easing: standardEasing\n        });\n      }\n    }\n    useRender(() => {\n      const btnProps = VBtn.filterProps(props);\n      return _createVNode(VBtn, _mergeProps({\n        \"symbol\": VTabsSymbol,\n        \"ref\": rootEl,\n        \"class\": ['v-tab', props.class],\n        \"style\": props.style,\n        \"tabindex\": isSelected.value ? 0 : -1,\n        \"role\": \"tab\",\n        \"aria-selected\": String(isSelected.value),\n        \"active\": false\n      }, btnProps, attrs, {\n        \"block\": props.fixed,\n        \"maxWidth\": props.fixed ? 300 : undefined,\n        \"onGroup:selected\": updateSlider\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [slots.default?.() ?? props.text, !props.hideSlider && _createVNode(\"div\", {\n          \"ref\": sliderEl,\n          \"class\": ['v-tab__slider', sliderColorClasses.value],\n          \"style\": sliderColorStyles.value\n        }, null)])\n      });\n    });\n    return forwardRefs({}, rootEl);\n  }\n});\n//# sourceMappingURL=VTab.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeVWindowProps, VWindow } from \"../VWindow/VWindow.mjs\"; // Composables\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, inject } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { VTabsSymbol } from \"./shared.mjs\";\nexport const makeVTabsWindowProps = propsFactory({\n  ...omit(makeVWindowProps(), ['continuous', 'nextIcon', 'prevIcon', 'showArrows', 'touch', 'mandatory'])\n}, 'VTabsWindow');\nexport const VTabsWindow = genericComponent()({\n  name: 'VTabsWindow',\n  props: makeVTabsWindowProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const group = inject(VTabsSymbol, null);\n    const _model = useProxiedModel(props, 'modelValue');\n    const model = computed({\n      get() {\n        // Always return modelValue if defined\n        // or if not within a VTabs group\n        if (_model.value != null || !group) return _model.value;\n\n        // If inside of a VTabs, find the currently selected\n        // item by id. Item value may be assigned by its index\n        return group.items.value.find(item => group.selected.value.includes(item.id))?.value;\n      },\n      set(val) {\n        _model.value = val;\n      }\n    });\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props);\n      return _createVNode(VWindow, _mergeProps({\n        \"_as\": \"VTabsWindow\"\n      }, windowProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": \"v-tabs-window\",\n        \"mandatory\": false,\n        \"touch\": false\n      }), slots);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VTabsWindow.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeVWindowItemProps, VWindowItem } from \"../VWindow/VWindowItem.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVTabsWindowItemProps = propsFactory({\n  ...makeVWindowItemProps()\n}, 'VTabsWindowItem');\nexport const VTabsWindowItem = genericComponent()({\n  name: 'VTabsWindowItem',\n  props: makeVTabsWindowItemProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const windowItemProps = VWindowItem.filterProps(props);\n      return _createVNode(VWindowItem, _mergeProps({\n        \"_as\": \"VTabsWindowItem\"\n      }, windowItemProps, {\n        \"class\": ['v-tabs-window-item', props.class],\n        \"style\": props.style\n      }), slots);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VTabsWindowItem.mjs.map","import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VTabs.css\";\n\n// Components\nimport { VTab } from \"./VTab.mjs\";\nimport { VTabsWindow } from \"./VTabsWindow.mjs\";\nimport { VTabsWindowItem } from \"./VTabsWindowItem.mjs\";\nimport { makeVSlideGroupProps, VSlideGroup } from \"../VSlideGroup/VSlideGroup.mjs\"; // Composables\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, genericComponent, isObject, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nimport { VTabsSymbol } from \"./shared.mjs\";\nfunction parseItems(items) {\n  if (!items) return [];\n  return items.map(item => {\n    if (!isObject(item)) return {\n      text: item,\n      value: item\n    };\n    return item;\n  });\n}\nexport const makeVTabsProps = propsFactory({\n  alignTabs: {\n    type: String,\n    default: 'start'\n  },\n  color: String,\n  fixedTabs: Boolean,\n  items: {\n    type: Array,\n    default: () => []\n  },\n  stacked: Boolean,\n  bgColor: String,\n  grow: Boolean,\n  height: {\n    type: [Number, String],\n    default: undefined\n  },\n  hideSlider: Boolean,\n  sliderColor: String,\n  ...makeVSlideGroupProps({\n    mandatory: 'force',\n    selectedClass: 'v-tab-item--selected'\n  }),\n  ...makeDensityProps(),\n  ...makeTagProps()\n}, 'VTabs');\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n  props: makeVTabsProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const items = computed(() => parseItems(props.items));\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider')\n      }\n    });\n    useRender(() => {\n      const slideGroupProps = VSlideGroup.filterProps(props);\n      const hasWindow = !!(slots.window || props.items.length > 0);\n      return _createVNode(_Fragment, null, [_createVNode(VSlideGroup, _mergeProps(slideGroupProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-tabs', `v-tabs--${props.direction}`, `v-tabs--align-tabs-${props.alignTabs}`, {\n          'v-tabs--fixed-tabs': props.fixedTabs,\n          'v-tabs--grow': props.grow,\n          'v-tabs--stacked': props.stacked\n        }, densityClasses.value, backgroundColorClasses.value, props.class],\n        \"style\": [{\n          '--v-tabs-height': convertToUnit(props.height)\n        }, backgroundColorStyles.value, props.style],\n        \"role\": \"tablist\",\n        \"symbol\": VTabsSymbol\n      }), {\n        default: () => [slots.default?.() ?? items.value.map(item => slots.tab?.({\n          item\n        }) ?? _createVNode(VTab, _mergeProps(item, {\n          \"key\": item.text,\n          \"value\": item.value\n        }), {\n          default: () => slots[`tab.${item.value}`]?.({\n            item\n          })\n        }))]\n      }), hasWindow && _createVNode(VTabsWindow, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"key\": \"tabs-window\"\n      }, {\n        default: () => [items.value.map(item => slots.item?.({\n          item\n        }) ?? _createVNode(VTabsWindowItem, {\n          \"value\": item.value\n        }, {\n          default: () => slots[`item.${item.value}`]?.({\n            item\n          })\n        })), slots.window?.()]\n      })]);\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VTabs.mjs.map","<template>\n  <v-container>\n    <v-tabs v-model=\"tab\" align-tabs=\"center\" color=\"primary\">\n      <v-tab :value=\"1\">Login</v-tab>\n      <v-tab :value=\"2\">Registration</v-tab>\n    </v-tabs>\n\n    <v-tabs-window v-model=\"tab\">\n      <v-tabs-window-item :key=\"2\" :value=\"2\">\n        <v-container fluid>\n          <v-form @submit.prevent=\"submitRegister\">\n            <v-row justify=\"center\">\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  variant=\"solo\"\n                  v-model=\"phone.value.value\"\n                  :error-messages=\"\n                    phone.errorMessage.value || errorResponseRegister\n                  \"\n                  label=\"User Name\"\n                  @input=\"errorResponseRegister = ''\"\n                ></v-text-field>\n                <v-text-field\n                  variant=\"solo\"\n                  v-model=\"password.value.value\"\n                  :error-messages=\"password.errorMessage.value\"\n                  label=\"password\"\n                  type=\"password\"\n                  min=\"0\"\n                ></v-text-field>\n                <v-btn class=\"mt-2\" text=\"Submit\" type=\"submit\" block></v-btn>\n              </v-col>\n            </v-row>\n          </v-form>\n        </v-container>\n      </v-tabs-window-item>\n      <v-tabs-window-item :key=\"1\" :value=\"1\">\n        <v-container fluid>\n          <v-form @submit.prevent=\"submitLogin\">\n            <v-row justify=\"center\">\n              <v-col cols=\"12\" md=\"6\">\n                <v-text-field\n                  variant=\"solo\"\n                  v-model=\"phone.value.value\"\n                  :error-messages=\"\n                    phone.errorMessage.value || errorResponseLogin\n                  \"\n                  @input=\"errorResponseLogin = ''\"\n                  label=\"User Name\"\n                ></v-text-field>\n                <v-text-field\n                  variant=\"solo\"\n                  v-model=\"password.value.value\"\n                  :error-messages=\"password.errorMessage.value\"\n                  label=\"password\"\n                  type=\"password\"\n                  min=\"0\"\n                ></v-text-field>\n                <v-btn class=\"mt-2\" text=\"Submit\" type=\"submit\" block></v-btn>\n              </v-col>\n            </v-row>\n          </v-form>\n        </v-container>\n      </v-tabs-window-item>\n    </v-tabs-window>\n\n    <h2>Все пользователи</h2>\n    <v-row>\n      <v-col v-for=\"user in appStore.users\" :key=\"user._id\" cols=\"12\" md=\"4\">\n        <v-card>\n          <v-card-title>{{ user.phone }}</v-card-title>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted } from 'vue';\nimport { useAppStore } from '../stores/AppStore';\nimport { useField, useForm } from 'vee-validate';\nimport type { dtoResponse } from '../types/dtoResponse';\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter();\ndefinePageMeta({\n  layout: 'empty',\n});\n\nconst appStore = useAppStore();\nconst tab = ref<null | number>(null);\nconst errorResponseRegister = ref<undefined | string>('');\nconst errorResponseLogin = ref<undefined | string>('');\n\nonMounted(() => {\n  appStore.getUsers();\n});\n\nconst { handleSubmit, handleReset } = useForm({\n  validationSchema: {\n    phone(value: string) {\n      if (!value?.length) return 'Введите имя';\n      else if (value?.length >= 2) return true;\n      else return 'Имя содержит минимум 2 символа';\n    },\n    password(value: string) {\n      if (!value?.length) return 'Введите парооль';\n      else if (value?.length >= 4) return true;\n      else return 'Пароль содержит минимум 4 символа';\n    },\n  },\n});\n\nconst phone = useField('phone');\nconst password = useField('password');\n\nconst submitRegister = handleSubmit(async (values: any) => {\n  const { phone, password } = values;\n\n  const result = await appStore.register({ phone, password });\n  if (result?.data.ok) {\n    appStore.snackbarText = result?.data.message;\n    appStore.snackbarColor = 'success';\n    appStore.isOpenSnackbar = true;\n    tab.value = 1;\n  } else {\n    appStore.snackbarText = result?.data.message;\n    appStore.snackbarColor = 'error';\n    appStore.snackbarTimeout = 4000;\n    appStore.isOpenSnackbar = true;\n    errorResponseRegister.value = result?.data.message;\n  }\n\n  handleReset();\n  appStore.getUsers();\n});\n\nconst submitLogin = handleSubmit(async (values: any) => {\n  const { phone, password } = values;\n\n  const result = await appStore.login({\n    phone,\n    password,\n  });\n\n  if (result?.ok) {\n    appStore.snackbarText = result?.message;\n    appStore.snackbarColor = 'success';\n    appStore.isOpenSnackbar = true;\n    router.push('/');\n  } else if (typeof result == 'string') {\n    appStore.snackbarText = result;\n    appStore.snackbarColor = 'error';\n    appStore.isOpenSnackbar = true;\n    errorResponseLogin.value = result;\n  }\n  handleReset();\n});\n</script>\n\n<style scoped lang=\"scss\">\nh2 {\n  text-align: center;\n  margin-top: 40px;\n  margin-bottom: 20px;\n}\n\n.product-card {\n  margin: 20px;\n  border-radius: 8px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  padding: 20px;\n\n  .v-card-title {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n\n  .v-btn {\n    margin-top: 20px;\n  }\n}\n</style>"],"names":["_createVNode","_mergeProps","_Fragment","_a","phone","password"],"mappings":"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_google_ignoreList":[0,1,2,3,4]}