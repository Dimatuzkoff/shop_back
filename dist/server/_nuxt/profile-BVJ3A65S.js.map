{"version":3,"file":"profile-BVJ3A65S.js","sources":["../../../../components/organism/UserProfile.vue","../../../../components/organism/OrderAdmin.vue","../../../../components/organism/OrderUser.vue","../../../../pages/profile.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { useCartStore } from '@/stores/CartStore';\nimport { useAppStore } from '../stores/AppStore';\nimport { defineProps, ref, computed } from 'vue';\nimport axios from 'axios';\nconst appStore = useAppStore();\nconst cartStore = useCartStore();\nconst envConfig: any = useNuxtApp().$envConfig;\nconst sendUserInfo = async () => {\n  const result = await axios.put(\n    `${envConfig.apiUrl}/api/user`,\n    appStore.profile\n  );\n};\n</script>\n\n<template>\n  <div class=\"profile\">\n    <v-row>\n      <v-col cols=\"5\">\n        <span>Телефон</span>\n      </v-col>\n      <v-col cols=\"6\">\n        <input\n          variant=\"solo\"\n          v-model=\"appStore.profile.phone\"\n          placeholder=\"phone\"\n          disabled\n        />\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"5\">\n        <span>Email</span>\n      </v-col>\n      <v-col cols=\"6\">\n        <input\n          variant=\"solo\"\n          v-model=\"appStore.profile.email\"\n          placeholder=\"email\"\n        />\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"5\">\n        <span>Имя</span>\n      </v-col>\n      <v-col cols=\"6\">\n        <input\n          variant=\"solo\"\n          v-model=\"appStore.profile.name\"\n          placeholder=\"Имя\"\n        />\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"5\">\n        <span>Фамилия</span>\n      </v-col>\n      <v-col cols=\"6\">\n        <input\n          variant=\"solo\"\n          v-model=\"appStore.profile.surname\"\n          placeholder=\"Фамилия\"\n        />\n      </v-col>\n    </v-row>\n\n    <v-col cols=\"12\">\n      <v-btn\n        class=\"mt-4\"\n        style=\"width: 200px\"\n        text=\"Сохранить\"\n        type=\"button\"\n        @click=\"sendUserInfo\"\n      ></v-btn>\n    </v-col>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.profile {\n  max-width: 700px;\n  margin: 0 auto 20px auto;\n}\n</style>","<script lang=\"ts\" setup>\nimport { useCartStore } from '@/stores/CartStore';\nimport { ref, onMounted } from 'vue';\n\nconst cartStore = useCartStore();\nconst orders = ref([]);\n\nonMounted(async () => {\n  const response = await cartStore.getOrders();\n  orders.value = response?.data;\n});\n</script>\n\n<template>\n  <div class=\"orders-admin\">\n    <h1 class=\"title\">Заказы админ</h1>\n    <v-table class=\"order-table\" height=\"300px\" fixed-header>\n      <thead>\n        <tr>\n          <th class=\"text-left\">Номер заказа</th>\n          <th class=\"text-left\">Имя Клиента</th>\n          <th class=\"text-left\">Телефон</th>\n          <th class=\"text-left\">E-mail</th>\n          <th class=\"text-left\">Итоговая сумма</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in orders\" :key=\"item._id\" class=\"order-row\">\n          <td>\n            <NuxtLink :to=\"`/admin/order/${item._id}`\" class=\"order-link\">{{\n              item.number\n            }}</NuxtLink>\n          </td>\n          <td>{{ item.guestContact.name }}</td>\n          <td>{{ item.guestContact.phone }}</td>\n          <td>{{ item.guestContact.email }}</td>\n          <td>{{ item.totalPrice }}₴</td>\n        </tr>\n      </tbody>\n    </v-table>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.orders-admin {\n  padding: 10px;\n\n  .title {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 15px;\n    text-align: center;\n    // color: #333;\n  }\n\n  .order-table {\n    width: 100%;\n    border-collapse: collapse;\n\n    thead th {\n      background-color: #f5f5f5;\n      padding: 8px;\n      border-bottom: 2px solid #ddd;\n      font-size: 14px;\n      font-weight: 600;\n    }\n\n    tbody td {\n      padding: 12px;\n      border-bottom: 1px solid #eee;\n      font-size: 14px;\n      text-align: left;\n    }\n\n    tbody tr {\n      &:hover {\n        background-color: #f9f9f9;\n      }\n    }\n\n    .order-link {\n      color: #1e88e5;\n      text-decoration: none;\n      font-weight: bold;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n}\n\n@media (min-width: 768px) {\n  .orders-admin {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n  }\n\n  .title {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  .order-table {\n    thead th {\n      padding: 10px;\n      font-size: 16px;\n    }\n\n    tbody td {\n      padding: 15px;\n      font-size: 16px;\n    }\n  }\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { useCartStore } from '@/stores/CartStore';\nimport { useAppStore } from '../stores/AppStore';\nimport { defineProps, ref, computed } from 'vue';\nimport axios from 'axios';\n\nconst appStore = useAppStore();\nconst cartStore = useCartStore();\nconst envConfig: any = useNuxtApp().$envConfig;\nconst orders = ref([]);\n\nconst sendUserInfo = async () => {\n  const result = await axios.put(\n    `${envConfig.apiUrl}/api/user`,\n    appStore.profile\n  );\n};\n\nonMounted(async () => {\n  const response = await cartStore.getOrder();\n  orders.value = response?.data;\n  if (!appStore.profile) return; // stop\n  const { name: pName, surname: pSurname, email: pEmail } = appStore.profile;\n\n  if (orders.value.length > 0 && (!pName || !pSurname || !pEmail)) {\n    const { name, surname, email } =\n      orders.value[orders.value.length - 1].guestContact;\n    if (!pName && name) appStore.profile.name = name;\n    if (!pSurname && surname) appStore.profile.surname = surname;\n    if (!pEmail && email) appStore.profile.email = email;\n\n    sendUserInfo(); // ???\n  }\n\n  orders.value = await Promise.all(\n    orders.value.map(async (elem) => {\n      const updatedProducts = await Promise.all(\n        elem.products.map(async (item) => {\n          const { data } = await axios.get(\n            `${envConfig.apiUrl}/api/product/${item.product}`\n          );\n          return {\n            productName: data.name,\n            productImg: data.image[0],\n            quantity: item.quantity,\n            price: data.price,\n          };\n        })\n      );\n      elem.products = updatedProducts;\n      return elem;\n    })\n  );\n});\n</script>\n\n<template>\n  <div>\n    <v-row v-for=\"order in orders\" :key=\"order.number\" class=\"order\">\n      <v-col cols=\"12\" class=\"mb-6\">\n        <v-row justify=\"space-between\" align=\"center\">\n          <span class=\"font-weight-bold\">Заказ №{{ order.number }}</span>\n          <span class=\"font-weight-bold text-success\">Оформлен</span>\n        </v-row>\n      </v-col>\n      <v-col v-for=\"prod in order.products\" :key=\"prod.productName\" cols=\"12\">\n        <v-row align=\"center\">\n          <v-col cols=\"2\" class=\"pa-0\">\n            <img\n              class=\"w-100\"\n              :src=\"`${envConfig.apiUrl}/${prod.productImg}`\"\n              alt=\"product\"\n            />\n          </v-col>\n          <v-col cols=\"6\">\n            <div>{{ prod.productName }}</div>\n            <div style=\"color: grey\">{{ prod.quantity }} шт.</div>\n            <div>{{ prod.price }} грн/шт.</div>\n          </v-col>\n        </v-row>\n      </v-col>\n      <v-col cols=\"12\">\n        <v-row justify=\"space-between\" align=\"center\">\n          <span class=\"font-weight-bold\">К оплате:</span>\n          <span class=\"font-weight-bold\">{{ order.totalPrice }} грн.</span>\n        </v-row>\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.order {\n  max-width: 700px;\n  margin: 10px auto;\n  padding: 10px;\n  border-radius: 10px;\n  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.5);\n}\n</style> ","<script lang=\"ts\" setup>\nimport { useCartStore } from '@/stores/CartStore';\nimport { useAppStore } from '../stores/AppStore';\nimport { defineProps, ref, computed } from 'vue';\nimport axios from 'axios';\nconst appStore = useAppStore();\nconst cartStore = useCartStore();\n</script>\n\n<template>\n  <div class=\"profile pa-2\">\n    <h1 class=\"d-flex justify-center ma-3\">Профиль</h1>\n    <organism-UserProfile v-if=\"appStore.profile\" />\n    <template v-if=\"appStore.profile\">\n      <organism-OrderAdmin v-if=\"appStore.profile.role === 'admin'\" />\n      <organism-OrderUser v-if=\"appStore.profile.role === 'customer'\" />\n    </template>\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAM,WAAW;AACC,iBAAa;AACzB,UAAA,YAAiB,WAAa,EAAA;AACpC,UAAM,eAAe,YAAY;AAChB,YAAM,MAAM;AAAA,QACzB,GAAG,UAAU,MAAM;AAAA,QACnB,SAAS;AAAA,MACX;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB,iBAAa;AACzB,UAAA,SAAS,IAAI,CAAA,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCJ,gBAAY;AACX,iBAAa;AACzB,UAAA,YAAiB,WAAa,EAAA;AAC9B,UAAA,SAAS,IAAI,CAAA,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJrB,UAAM,WAAW;AACC,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}