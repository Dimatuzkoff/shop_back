{"version":3,"file":"index-D8EG7S8J.js","sources":["../../../../pages/category/[category]/index.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <h1>{{ route.params.category }}</h1>\n    <h2>category page</h2> -->\n    <organism-Loader v-if=\"appStore.isLoading\" :isBlock=\"true\" />\n\n    <organism-ProductList v-else />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useRoute, useRouter } from 'vue-router';\nimport { productMenu } from '@/data/default/productMenu';\nimport { replaceSpace } from '../utils';\nimport { useProductStore } from '../stores/ProductStore';\nimport { useAppStore } from '../stores/AppStore';\n\nconst route = useRoute();\nconst router = useRouter();\nconst productStore = useProductStore();\nconst appStore = useAppStore();\n\nfunction categoryToId(category, productMenu) {\n  return productMenu.find((elem) => replaceSpace(elem.name.en) == category).id;\n}\n\ntry {\n  const categoryId = categoryToId(route.params.category, productMenu);\n  productStore.getProducts({ category: categoryId });\n} catch (e) {\n  router.push('/');\n}\n</script>"],"names":["productMenu"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,UAAM,QAAQ;AACd,UAAM,SAAS;AACf,UAAM,eAAe;AACrB,UAAM,WAAW;AAER,aAAA,aAAa,UAAUA,cAAa;AACpCA,aAAAA,aAAY,KAAK,CAAC,SAAS,aAAa,KAAK,KAAK,EAAE,KAAK,QAAQ,EAAE;AAAA,IAC5E;AAEI,QAAA;AACF,YAAM,aAAa,aAAa,MAAM,OAAO,UAAU,WAAW;AAClE,mBAAa,YAAY,EAAE,UAAU,WAAY,CAAA;AAAA,aAC1C,GAAG;AACV,aAAO,KAAK,GAAG;AAAA,IACjB;;;;;;;;;;;;;;;;;;;;"}